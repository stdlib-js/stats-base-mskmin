{"version":3,"file":"index.mjs","sources":["../lib/mskmin.js","../lib/ndarray.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array according to a mask.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NumericArray} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @returns {number} minimum value\n*\n* @example\n* var x = [ 1.0, -2.0, -4.0, 2.0 ];\n* var mask = [ 0, 0, 1, 0 ];\n*\n* var v = mskmin( x.length, x, 1, mask, 1 );\n* // returns -2.0\n*/\nfunction mskmin( N, x, strideX, mask, strideMask ) {\n\tvar min;\n\tvar ix;\n\tvar im;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideMask < 0 ) {\n\t\tim = (1-N) * strideMask;\n\t} else {\n\t\tim = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tix += strideX;\n\t\tim += strideMask;\n\t}\n\tif ( i === N ) {\n\t\treturn NaN;\n\t}\n\tmin = x[ ix ];\n\tif ( isnan( min ) ) {\n\t\treturn min;\n\t}\n\ti += 1;\n\tfor ( i; i < N; i++ ) {\n\t\tix += strideX;\n\t\tim += strideMask;\n\t\tif ( mask[ im ] ) {\n\t\t\tcontinue;\n\t\t}\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = mskmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of a strided array according to a mask.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - `x` starting index\n* @param {NumericArray} mask - mask array\n* @param {integer} strideMask - `mask` stride length\n* @param {NonNegativeInteger} offsetMask - `mask` starting index\n* @returns {number} minimum value\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, -5.0, -6.0 ];\n* var mask = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mskmin( N, x, 2, 1, mask, 2, 1 );\n* // returns -2.0\n*/\nfunction mskmin( N, x, strideX, offsetX, mask, strideMask, offsetMask ) {\n\tvar min;\n\tvar ix;\n\tvar im;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tix = offsetX;\n\tim = offsetMask;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( mask[ im ] === 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tix += strideX;\n\t\tim += strideMask;\n\t}\n\tif ( i === N ) {\n\t\treturn NaN;\n\t}\n\tmin = x[ ix ];\n\tif ( isnan( min ) ) {\n\t\treturn min;\n\t}\n\ti += 1;\n\tfor ( i; i < N; i++ ) {\n\t\tix += strideX;\n\t\tim += strideMask;\n\t\tif ( mask[ im ] ) {\n\t\t\tcontinue;\n\t\t}\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = mskmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar mskmin = require( './mskmin.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( mskmin, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = mskmin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum value of a strided array according to a mask.\n*\n* @module @stdlib/stats-base-mskmin\n*\n* @example\n* var mskmin = require( '@stdlib/stats-base-mskmin' );\n*\n* var x = [ 1.0, -2.0, -4.0, 2.0 ];\n* var mask = [ 0, 0, 1, 0 ];\n*\n* var v = mskmin( x.length, x, 1 );\n* // returns -2.0\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n* var mskmin = require( '@stdlib/stats-base-mskmin' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, -5.0, -6.0 ];\n* var mask = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1 ];\n* var N = floor( x.length / 2 );\n*\n* var v = mskmin.ndarray( N, x, 2, 1, mask, 2, 1 );\n* // returns -2.0\n*/\n\n// MODULES //\n\nvar mskmin = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = mskmin;\n"],"names":["isnan","require$$0","isNegativeZero","require$$1","mskmin","N","x","strideX","mask","strideMask","min","ix","im","v","i","NaN","offsetX","offsetMask","lib"],"mappings":";;iTAsBA,IAAIA,EAAQC,EACRC,EAAiBC,EA6ErB,IC9EIH,EAAQC,EACRC,EAAiBC,EA0ErB,IC1EAC,EFsBA,SAAiBC,EAAGC,EAAGC,EAASC,EAAMC,GACrC,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,OAAOU,IAYR,IATCJ,EADIJ,EAAU,GACR,EAAEF,GAAKE,EAER,EAGLK,EADIH,EAAa,GACX,EAAEJ,GAAKI,EAER,EAEAK,EAAI,EAAGA,EAAIT,GACI,IAAfG,EAAMI,GADQE,IAInBH,GAAMJ,EACNK,GAAMH,EAEP,GAAKK,IAAMT,EACV,OAAOU,IAGR,GADAL,EAAMJ,EAAGK,GACJX,EAAOU,GACX,OAAOA,EAGR,IADAI,GAAK,EACIA,EAAIT,EAAGS,IAGf,GAFAH,GAAMJ,GAEDC,EADLI,GAAMH,GACN,CAIA,GADAI,EAAIP,EAAGK,GACFX,EAAOa,GACX,OAAOA,GAEHA,EAAIH,GAASG,IAAMH,GAAOR,EAAgBW,MAC9CH,EAAMG,GAGR,OAAOH,GExERT,EAOAG,EAAA,WDqBA,SAAiBC,EAAGC,EAAGC,EAASS,EAASR,EAAMC,EAAYQ,GAC1D,IAAIP,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,OAAOU,IAIR,IAFAJ,EAAKK,EACLJ,EAAKK,EACCH,EAAI,EAAGA,EAAIT,GACI,IAAfG,EAAMI,GADQE,IAInBH,GAAMJ,EACNK,GAAMH,EAEP,GAAKK,IAAMT,EACV,OAAOU,IAGR,GADAL,EAAMJ,EAAGK,GACJX,EAAOU,GACX,OAAOA,EAGR,IADAI,GAAK,EACIA,EAAIT,EAAGS,IAGf,GAFAH,GAAMJ,GAEDC,EADLI,GAAMH,GACN,CAIA,GADAI,EAAIP,EAAGK,GACFX,EAAOa,GACX,OAAOA,GAEHA,EAAIH,GAASG,IAAMH,GAAOR,EAAgBW,MAC9CH,EAAMG,GAGR,OAAOH,KCzDR,ICmBAQ,EDnBAd"}