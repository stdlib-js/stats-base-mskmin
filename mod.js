// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__;e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(i.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&u&&u.call(r,e,t.set),r};var f=e;function c(r){return r!=r}var _=Number.NEGATIVE_INFINITY;function p(r){return 0===r&&1/r===_}function b(r,e,t,n,o){var a,u,i,l,f;if(r<=0)return NaN;for(u=t<0?(1-r)*t:0,i=o<0?(1-r)*o:0,f=0;f<r&&0!==n[i];f++)u+=t,i+=o;if(f===r)return NaN;if(c(a=e[u]))return a;for(f+=1;f<r;f++)if(u+=t,!n[i+=o]){if(c(l=e[u]))return l;(l<a||l===a&&p(l))&&(a=l)}return a}function y(r,e,t,n,o,a,u){var i,l,f,_,b;if(r<=0)return NaN;for(l=n,f=u,b=0;b<r&&0!==o[f];b++)l+=t,f+=a;if(b===r)return NaN;if(c(i=e[l]))return i;for(b+=1;b<r;b++)if(l+=t,!o[f+=a]){if(c(_=e[l]))return _;(_<i||_===i&&p(_))&&(i=_)}return i}f(b,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:y});export{b as default,y as ndarray};
//# sourceMappingURL=mod.js.map
